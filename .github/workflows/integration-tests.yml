name: Integration Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 't2l-core/**'
      - 'src/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
  pull_request:
    branches: [ main ]
    paths:
      - 't2l-core/**'
      - 'src/**'
      - 'Cargo.toml'
      - 'Cargo.lock'

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  integration-tests:
    name: Run Integration Tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable, nightly]
        exclude:
          # Exclude some combinations to save CI time
          - os: macos-latest
            rust: nightly
          - os: windows-latest
            rust: nightly

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-

    - name: Build project
      run: cargo build --all --verbose

    - name: Run unit tests
      run: cargo test --lib --verbose

    - name: Run integration tests - Quick
      run: |
        cd t2l-core
        cargo test --test integration workflow_tests cli_tests export_tests -- --test-threads=1
      env:
        RUST_LOG: debug

    - name: Run integration tests - Architecture
      run: |
        cd t2l-core
        cargo test --test integration architecture_tests -- --test-threads=1
      env:
        RUST_LOG: info

    - name: Run integration tests - Error Handling
      run: |
        cd t2l-core
        cargo test --test integration error_tests -- --test-threads=1
      env:
        RUST_LOG: info

    - name: Run performance benchmarks
      if: matrix.rust == 'stable' && matrix.os == 'ubuntu-latest'
      run: |
        cd t2l-core
        cargo test --test integration performance_tests -- --test-threads=1 --nocapture
      env:
        RUST_LOG: info

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: llvm-tools-preview

    - name: Install cargo-llvm-cov
      uses: taiki-e/install-action@cargo-llvm-cov

    - name: Generate coverage
      run: |
        cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
        cargo llvm-cov --all-features --workspace --lcov --output-path lcov-integration.info \
          --test integration -- --test-threads=1

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./lcov.info,./lcov-integration.info
        fail_ci_if_error: false