[package]
name = "lorax"
version = "0.1.0"
edition = "2021"
authors = ["LoRAX Team"]
description = "Production-ready Text-to-LoRA (T2L) implementation in Rust"
license = "GNU GENERAL PUBLIC LICENSE Version 3"
repository = "https://github.com/lorax-project/lorax"
keywords = ["lora", "llm", "adaptation", "hypernetwork", "nlp"]
categories = ["science", "machine-learning"]

[[bin]]
name = "lorax"
path = "src/main.rs"

[dependencies]
# Core dependencies
anyhow = "1.0"
thiserror = "1.0"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
env_logger = "0.11"
safetensors = "0.4"
rand = "0.9"
rand_distr = "0.5"
chrono = { version = "0.4", features = ["serde"] }

# Async runtime
tokio = { version = "1.35", features = ["full"] }
async-trait = "0.1"

# ML/Tensor operations
candle-core = "0.9"
candle-nn = "0.9"
candle-transformers = "0.9"
ndarray = "0.15"
num-traits = "0.2"

# BERT/Tokenization
tokenizers = { version = "0.15", features = ["http"] }
cached-path = "0.6"

# Configuration
config = "0.13"
clap = { version = "4.4", features = ["derive", "env"] }
once_cell = "1.19"

# Utilities
rayon = "1.8"
parking_lot = "0.12"
dashmap = "5.5"
bytes = "1.5"
futures = "0.3"
num_cpus = "1.16"

# Data loading and file formats
hdf5 = "0.8"
memmap2 = "0.9"
bincode = "1.3"
flate2 = "1.0"

# Metrics and monitoring
prometheus = { version = "0.13", features = ["process"] }
opentelemetry = "0.21"
opentelemetry-prometheus = "0.14"

# Testing
proptest = { version = "1.4", optional = true }
criterion = { version = "0.5", optional = true }

[dev-dependencies]
tempfile = "3.8"
mockall = "0.12"
test-case = "3.3"
approx = "0.5"

[features]
default = ["small-models"]
small-models = []
large-models = []
cuda = ["candle-core/cuda", "candle-nn/cuda"]
metal = ["candle-core/metal", "candle-nn/metal"]
accelerate = ["candle-core/accelerate", "candle-nn/accelerate"]
testing = ["proptest", "criterion"]
enterprise = ["auth", "audit", "encryption"]
auth = []
audit = []
encryption = []

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
strip = true

[profile.bench]
inherits = "release"

# Benchmarks are provided by t2l-bench crate

[workspace]
members = [".", "t2l-core", "t2l-bench", "t2l-cuda", "t2l-simd"]